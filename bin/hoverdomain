#!/usr/bin/env node

const _ = require('lodash');
const { Promise } = require('bluebird');
const HoverDomain = require('../lib/hoverdomain');
const { sprintf } = require('sprintf-js');

let program = require('commander')
  .option('-l, --limit <limit>', 'Set a limit on price', parseInt);

async function main() {
  program.parse(process.argv);

  const limit = program.opts().limit;

  Promise.each(program.args, async arg => {
    let domain = new HoverDomain(arg);

    let { results } = await domain.list();

    if (arg.match(/\./)) {
      results = results.filter(result => result.domain === arg);
    }
    else {
      results = results.filter(result => result.domain.split(/\./)[0] == arg);
    }

    if (limit) {
      results = results.filter(result =>
        parseFloat(result.price.replace(/\$/, '').replace(/,/g, '')) < limit
      );
    }

    _.sortBy(results, 'domain').forEach(result => {
      console.log(sprintf('%-50s %10s', result.domain, result.price));
    });

    if (!results.length) {
      console.log(`${arg}: Not available or no matches.`);
    }
  })
}

main();
